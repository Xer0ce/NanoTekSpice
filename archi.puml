@startuml

namespace nts {
    interface IComponent {
        + virtual ~IComponent() = default;
        + virtual void simulate(std::size_t tick) = 0;
        + virtual nts::Tristate compute(std::size_t pin) = 0;
        + virtual void setLink(std::size_t pin, nts::IComponent &other, std::size_t otherPin ) = 0;
    }

    abstract AComponent {
        + virtual AComponent() = default;
        + virtual ~AComponent() = default;
    }

    class SpecialComponents {

    }

    class ElementaryComponents {

    }

    class GatesComponents {

    }

    class AdvancedComponents {

    }

    class Component {

    }

    IComponent --|> AComponent

    AComponent -down--|> SpecialComponents
    AComponent -down--|> ElementaryComponents
    AComponent -down--|> GatesComponents
    AComponent -down--|> AdvancedComponents

    Component <|-up-- SpecialComponents
    Component <|-up-- ElementaryComponents
    Component <|-up-- GatesComponents
    Component <|-up-- AdvancedComponents

}

@enduml